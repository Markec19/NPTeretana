/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.form;

import domain.Clanarina;
import domain.Nalog;
import domain.Ocena;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import controller.Controller;
import domain.Teretana;
import view.form.component.table.ClanarinaTableModel;
import view.form.util.FormMode;

/**
 * Forma koja korisniku dozvoljava da izmeni podatke svog naloga, kupi ili produzi clanarinu, oceni teretanu ili zakaze individualni trening
 * 
 * @author Luka
 */
public class FrmNalog extends javax.swing.JFrame {
    
    Nalog n;
    List<Ocena> ocene;
    Clanarina c;
    
    /**
     * Creates new form FrmNalog
     */
    public FrmNalog(Nalog n) {
        initComponents();
        setLocationRelativeTo(null);
        
        this.n = n;
        ocene = new ArrayList<>();
        
        popuniFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtKorIme = new javax.swing.JTextField();
        txtSifra = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClanarina = new javax.swing.JTable();
        btnProduzi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnOceni = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtTeretana = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGrad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAdresa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcbOcena = new javax.swing.JComboBox<>();
        btnPotvrdiOcenu = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnZakazi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Ime:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Prezime:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Šifra:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Korisničko ime:");

        tblClanarina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblClanarina);

        btnProduzi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnProduzi.setText("Produži članarinu");
        btnProduzi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProduziActionPerformed(evt);
            }
        });

        btnDodaj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDodaj.setText("Dodaj članarinu");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOceni.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnOceni.setText("Oceni teretanu");
        btnOceni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOceniActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Teretana:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Grad:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Adresa:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Ocena:");

        jcbOcena.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcbOcena.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  1  ", "  2  ", "  3  ", "  4  ", "  5  " }));
        jcbOcena.setSelectedIndex(-1);

        btnPotvrdiOcenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPotvrdiOcenu.setText("Potvrdi ocenu");
        btnPotvrdiOcenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiOcenuActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIzmeni.setText("Izmeni podatke");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnSacuvaj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSacuvaj.setText("Sačuvaj izmene");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnZakazi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnZakazi.setText("Zakaži trening");
        btnZakazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZakaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTeretana, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(101, 101, 101)
                                .addComponent(jLabel8)
                                .addGap(39, 39, 39)
                                .addComponent(jcbOcena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnPotvrdiOcenu, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnIzmeni)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSacuvaj))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtPrezime)
                                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(52, 52, 52)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtSifra)
                                            .addComponent(txtKorIme, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnZakazi, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnProduzi)
                .addGap(40, 40, 40)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOceni)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtKorIme, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(txtSifra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProduzi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOceni, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnZakazi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTeretana, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jcbOcena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnPotvrdiOcenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProduziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProduziActionPerformed
        Clanarina c = vratiClanarinu();
        if(c == null){
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita članarinu");
        }else{
            try {
                //JOptionPane.showMessageDialog(this, "Sistem je učitao članarinu");
                FrmClanarina form = new FrmClanarina(c, this, FormMode.FORM_EDIT);
                form.setVisible(true);
            } catch (Exception ex) {
                //JOptionPane.showMessageDialog(this, "Sistem ne može da učita članarinu");
                Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }//GEN-LAST:event_btnProduziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        kreirajClanarinu();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnOceniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOceniActionPerformed
        c = vratiClanarinu();
        if(c == null){
            //JOptionPane.showMessageDialog(this, "Sistem ne može da učita teretanu");
        }else{
            try {
                ucitajTeretanu(c.getTeretana());
                //JOptionPane.showMessageDialog(this, "Sistem je učitao teretanu");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita teretanu");
                Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnOceniActionPerformed

    private void btnPotvrdiOcenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiOcenuActionPerformed
        if(c == null){
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti ocenu teretane");
        }else{
            int ocena = odrediOcenu();
            if(ocena == -1){
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti ocenu teretane");
                JOptionPane.showMessageDialog(this, "Izaberite ocenu!");
            }else{
                try {
                    oceni(c.getTeretana(), ocena);
                    
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti ocenu teretane");
                    Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnPotvrdiOcenuActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        btnIzmeni.setEnabled(false);
        
        txtIme.setEditable(true);
        txtPrezime.setEditable(true);
        txtKorIme.setEditable(true);
        txtSifra.setEditable(true);
        btnSacuvaj.setEnabled(true);
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            Nalog nalog = vratiNalogZaIzmenu();            
            if(nalog != null){
                long id = n.getId();
                n = nalog;
                n.setId(id);
                sacuvajNalog(n);                
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio nalog");
                
                txtIme.setEditable(false);
                txtPrezime.setEditable(false);
                txtKorIme.setEditable(false);
                txtSifra.setEditable(false);
                btnSacuvaj.setEnabled(false);
                btnIzmeni.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti nalog");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti nalog");
            Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnZakaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZakaziActionPerformed
        new FrmIndividualniTrening(n).setVisible(true);
    }//GEN-LAST:event_btnZakaziActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOceni;
    private javax.swing.JButton btnPotvrdiOcenu;
    private javax.swing.JButton btnProduzi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnZakazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbOcena;
    private javax.swing.JTable tblClanarina;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtGrad;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKorIme;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtSifra;
    private javax.swing.JTextField txtTeretana;
    // End of variables declaration//GEN-END:variables

    /**
     * Popunjva formu podacima
     */
    private void popuniFormu() {
        txtIme.setText(n.getIme());
        txtPrezime.setText(n.getPrezime());
        txtKorIme.setText(n.getKorisnickoIme());
        txtSifra.setText(n.getSifra());
        btnSacuvaj.setEnabled(false);
        
        txtIme.setEditable(false);
        txtPrezime.setEditable(false);
        txtKorIme.setEditable(false);
        txtSifra.setEditable(false);
        
        txtTeretana.setEditable(false);
        txtGrad.setEditable(false);
        txtAdresa.setEditable(false);
        jcbOcena.setEnabled(false);
        btnPotvrdiOcenu.setEnabled(false);
        
        try {
            ocene = Controller.getInstance().vratiSveOcene(n);
        } catch (Exception ex) {
            Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        popuniTabeluClanarina();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * Popunjava tabelu clanarina
     */
    private void popuniTabeluClanarina() {
        List<Clanarina> clanarine;
        try {
            clanarine = Controller.getInstance().vratiSveClanarine(n);
            tblClanarina.setModel(new ClanarinaTableModel(clanarine));
        } catch (Exception ex) {
            Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Vraca tabelu clanarina
     * 
     * @return tabela clanarina
     */
    public JTable getTblClanarina() {
        return tblClanarina;
    }

    /**
     * Postavlja tabelu clanarina
     * 
     * @param tblClanarina tabela clanarina
     */
    public void setTblClanarina(JTable tblClanarina) {
        this.tblClanarina = tblClanarina;
    }
    
    /**
     * Vraca clanarinu na osnuvu izabranog reda iz tabele
     * 
     * @return clanarina
     */
    private Clanarina vratiClanarinu(){
        int red = tblClanarina.getSelectedRow();
        if(red != -1){
            try {
                List<Clanarina> clanarine = Controller.getInstance().vratiSveClanarine();
                Clanarina c = ucitajClanarinu(clanarine.get(red));                 
                return c;
            } catch (Exception ex) {
                Logger.getLogger(FrmNalog.class.getName()).log(Level.SEVERE, null, ex);
            }            
        }
        return null;        
    }

    /**
     * Odredjuje koju ocenu je korisnik izabrao iz combo box-a
     * 
     * @return vrednost ocene
     */
    private int odrediOcenu() {
        int slucaj = jcbOcena.getSelectedIndex();
        switch(slucaj){
            case 0: return 1;
            case 1: return 2;
            case 2: return 3;
            case 3: return 4;
            case 4: return 5;
            default: return -1;
        }
    }

    /**
     * Odredjuje da li je teretana vec ocenjena od strane datog naloga
     * 
     * @param teretana
     * @return da li je teretana ocenjena
     * @throws Exception 
     */
    private boolean ocenjena(Teretana teretana) throws Exception {
        for (int i = 0; i < ocene.size(); i++)
            if(ocene.get(i).getTeretana().getId() == teretana.getId())
                return true;
        return false;
    }

    /**
     * Vraca vrednost ocene
     * @param teretana
     * @return vrednost ocene
     */
    private int vratiVrednostOcene(Teretana teretana) {
        for (int i = 0; i < ocene.size(); i++)
            if(ocene.get(i).getTeretana().getId() == teretana.getId())
                return ocene.get(i).getVrednost();
        return -1;
        
    }

    /**
     * Popunjava formu na osnuvu podataka o teretani
     * @param t
     * @throws Exception 
     */
    private void ucitajTeretanu(Teretana t) throws Exception {
        txtTeretana.setText(t.getNaziv());
        txtAdresa.setText(t.getAdresa());
        txtGrad.setText(t.getGrad().getNaziv());
        jcbOcena.setEnabled(true);
        btnPotvrdiOcenu.setEnabled(true);
        if(ocenjena(t))
            jcbOcena.setSelectedIndex(vratiVrednostOcene(t)-1);
    }

    /**
     * Dodaje ili menja ocenu teretane za dati nalog
     * @param teretana
     * @param vrednost vredost ocene
     * @throws Exception 
     */
    private void oceni(Teretana teretana, int vrednost) throws Exception {
        Ocena ocena = new Ocena(n, c.getTeretana(), vrednost);
        if(!ocenjena(teretana)){
            Controller.getInstance().dodajOcenu(ocena);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio ocenu teretane");
        }else{
            Controller.getInstance().urediOcenu(ocena);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio ocenu teretane");
        }
    }

    /**
     * Vraca nalog ciji podaci se menjaju
     * @return nalog ciji podaci se menjaju
     * @throws Exception 
     */
    private Nalog vratiNalogZaIzmenu() throws Exception {
        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        String korIme = txtKorIme.getText();
        String sifra = txtSifra.getText();
        
        if(ime.isEmpty() || prezime.isEmpty() || korIme.isEmpty() || sifra.isEmpty())
            return null;
        
        if(!korIme.equals(n.getKorisnickoIme()) && korisnickoImePostoji(korIme)){
            JOptionPane.showMessageDialog(this, "Uneto korisničko ime već posotji");
            return null;
        }
        
        return new Nalog(ime, prezime, korIme, sifra);
    }
    
    /**
     * Proverava da li korisnicko ime vec postoji u bazi podataka
     * 
     * @param korIme korisnicko ime
     * @return da li korisnicko ime vec postoji u bazi podataka
     * @throws Exception 
     */
    private boolean korisnickoImePostoji(String korIme) throws Exception {
        List<Nalog> list = vratiListuNaloga();
        for (int i = 0; i < list.size(); i++)
            if(korIme.equals(list.get(i).getKorisnickoIme()))
                return true;
        return false;
    }
    
    /**
     * Vraca listu svih naloga
     * @return lista svih naloga
     * @throws Exception 
     */
    private List<Nalog> vratiListuNaloga() throws Exception {
        return Controller.getInstance().vratiSveNaloge();
    }

    /**
     * Cuva izmene izvrsene na nalogu
     * 
     * @param n nalog
     * @throws Exception 
     */
    private void sacuvajNalog(Nalog n) throws Exception {
        Controller.getInstance().sacuvajNalog(n);
    }

    /**
     * Otvara formu za kreiranje nove clanarine
     */
    private void kreirajClanarinu() {          
        FrmClanarina form = new FrmClanarina(n, this, FormMode.FORM_ADD);
        form.setVisible(true);
    }

    /**
     * Ucitava clanarinu iz baze podataka
     * 
     * @param c clanarina
     * @return
     * @throws Exception 
     */
    private Clanarina ucitajClanarinu(Clanarina c) throws Exception {
        return Controller.getInstance().ucitajClanarinu(c);
    }
    
    
}
