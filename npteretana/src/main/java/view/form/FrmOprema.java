/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.form;

import controller.Controller;
import domain.Grad;
import domain.Oprema;
import domain.Teretana;
import domain.VrstaOpreme;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import view.form.component.table.OpremaTableModel;

/**
 * Forma za pregled i dodavanje nove opreme
 * 
 * @author Luka
 */
public class FrmOprema extends javax.swing.JFrame {

    /**
     * Creates new form FrmOprema
     */
    public FrmOprema() {
        initComponents();
        popuniFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOprema = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        jcbStanje = new javax.swing.JComboBox<>();
        jcbVrsta = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbGrad = new javax.swing.JComboBox<>();
        jcbTeretana = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnPotvrdi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblOprema.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOprema);

        btnDodaj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDodaj.setText("Dodaj opremu");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        jcbStanje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbStanje.setSelectedIndex(-1);

        jcbVrsta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbVrsta.setSelectedIndex(-1);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Vrsta opreme:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Stanje opreme:");

        jcbGrad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbGrad.setSelectedIndex(-1);

        jcbTeretana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTeretana.setSelectedIndex(-1);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Teretana:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Grad:");

        btnPotvrdi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPotvrdi.setText("Potvrdi");
        btnPotvrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotvrdiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbStanje, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbVrsta, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbTeretana, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPotvrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jcbStanje, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcbVrsta, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jcbGrad, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jcbTeretana, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnPotvrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        jcbStanje.setEnabled(true);
        jcbVrsta.setEnabled(true);
        jcbGrad.setEnabled(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPotvrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotvrdiActionPerformed
        Oprema o = vratiZapamcenuOpremu();
        if(o != null){
            try {
                Controller.getInstance().dodajOpremu(o);
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio opremu");
            } catch (Exception ex) {
                Logger.getLogger(FrmOprema.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti opremu");
        } 
        
        jcbStanje.setEnabled(false);
        jcbVrsta.setEnabled(false);
        jcbGrad.setEnabled(false);
        jcbTeretana.setEnabled(false);
    }//GEN-LAST:event_btnPotvrdiActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnPotvrdi;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbGrad;
    private javax.swing.JComboBox<String> jcbStanje;
    private javax.swing.JComboBox<String> jcbTeretana;
    private javax.swing.JComboBox<String> jcbVrsta;
    private javax.swing.JTable tblOprema;
    // End of variables declaration//GEN-END:variables

    /**
     * Popunjava formu podacima
     */
    private void popuniFormu() {
        List<Oprema> opreme = new ArrayList<>();
        try {
            opreme = Controller.getInstance().vratiSveOpreme();
            tblOprema.setModel(new OpremaTableModel(opreme));
        } catch (Exception ex) {
            Logger.getLogger(FrmOprema.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jcbStanje.setEnabled(false);
        jcbVrsta.setEnabled(false);
        jcbGrad.setEnabled(false);
        jcbTeretana.setEnabled(false);
        
        List<VrstaOpreme> vrste = new ArrayList<>();
        List<Grad> gradovi = new ArrayList<>();
        String[] stanja = {"Loše", "Srednje", "Dobro"};
        
        try {
            vrste = Controller.getInstance().vratiSveVrsteOpreme();
            gradovi = Controller.getInstance().vratiSveGradove();
            
            jcbVrsta.setModel(new DefaultComboBoxModel(vrste.toArray()));
            jcbGrad.setModel(new DefaultComboBoxModel(gradovi.toArray()));
            jcbStanje.setModel(new DefaultComboBoxModel(stanja));            
        } catch (Exception ex) {
            Logger.getLogger(FrmOprema.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jcbVrsta.setSelectedIndex(-1);
        jcbGrad.setSelectedIndex(-1);
        jcbStanje.setSelectedIndex(-1);
        
        jcbGrad.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    Grad g = (Grad) jcbGrad.getSelectedItem();
                    List<Teretana> teretane = new ArrayList<>();
                    teretane = Controller.getInstance().nadjiTeretane(g);
                    jcbTeretana.setEnabled(true);
                    jcbTeretana.setModel(new DefaultComboBoxModel(teretane.toArray()));
                } catch (Exception ex) {
                    Logger.getLogger(FrmOprema.class.getName()).log(Level.SEVERE, null, ex);
                    jcbTeretana.setModel(new DefaultComboBoxModel(new ArrayList().toArray()));
                }
            }
        });
        
    }

    /**
     * Vraca opremu koja je zapamcena u bazi podataka
     * 
     * @return oprema koja je zapamcena u bazi podataka
     */
    private Oprema vratiZapamcenuOpremu() {
        Oprema o = new Oprema();
        try {
            o.setStanjeOpreme((String) jcbStanje.getSelectedItem());
            o.setTeretana((Teretana) jcbTeretana.getSelectedItem());
            o.setVrsta((VrstaOpreme) jcbVrsta.getSelectedItem());
            //racunanjeKolicine(o);
        } catch (Exception ex) {
            Logger.getLogger(FrmOprema.class.getName()).log(Level.SEVERE, null, ex);
        }            
        return o;
    }

//    private void racunanjeKolicine(Oprema o) throws Exception {
//        Teretana t = o.getTeretana();
//        List<Oprema> list = Controller.getInstance().nadjiOpreme(t);
//        boolean postoji = false;
//        int i = 0;
//        int kolicina = 1;
//        
//        if(list.size() > 0)
//            while(!postoji){
//            Oprema op = list.get(i);
//            if(o.getVrsta().equals(op.getVrsta())){
//                kolicina = op.getKolicina() + 1;
//                o.setKolicina(kolicina);
//                postaviKolicinu(o.getVrsta(), kolicina, list);
//                postoji = true;
//            }
//            i++;
//        } else{
//            o.setKolicina(kolicina);
//        }
//    }
//
//    private void postaviKolicinu(VrstaOpreme vrsta, int kolicina, List<Oprema> list) {
//        for (int i = 0; i < list.size(); i++) {
//            if(list.get(i).getVrsta().equals(vrsta))
//                list.get(i).setKolicina(kolicina);
//        }
//    }
}
