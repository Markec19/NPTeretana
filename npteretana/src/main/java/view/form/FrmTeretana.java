/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.form;

import controller.Controller;
import domain.Grad;
import domain.Teretana;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import view.form.component.table.TeretanaTableModel;

/**
 *  
 * 
 * @author Luka
 */
public class FrmTeretana extends javax.swing.JFrame {
    
    List<Teretana> teretane;
    Teretana t;
    
    /**
     * Creates new form FrmTeretana
     */
    public FrmTeretana() {
        initComponents();
        setLocationRelativeTo(null);
        
        teretane = new ArrayList<>();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        pokreniFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTeretane = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAdresa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnPretraga = new javax.swing.JButton();
        jcbPretraga = new javax.swing.JComboBox<>();
        jcbGrad = new javax.swing.JComboBox<>();
        btnIzaberi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Grad:");

        tblTeretane.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTeretane);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Grad:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Adresa:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Naziv:");

        btnDodaj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDodaj.setText("Dodaj teretanu");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPretraga.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPretraga.setText("Pretra≈æi");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        jcbPretraga.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbPretraga.setSelectedIndex(-1);

        jcbGrad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbGrad.setSelectedIndex(-1);

        btnIzaberi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIzaberi.setText("Izaberi");
        btnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27)
                                .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodaj))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnIzaberi)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jcbPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(btnPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnIzaberi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            Teretana t = vratiZapamcenuTeretanu();
            if(t != null){
                zapamtiTeretanu(t);
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio teretanu");
//                azurirajTabelu();
            }else{
                JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da zapamti teretanu");
            }            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da zapamti teretanu");
            Logger.getLogger(FrmTeretana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiActionPerformed
        try {
            t = vratiIzabranuTeretanu();
            ucitajTeretanu(t);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da uƒçita teretanu");
            Logger.getLogger(FrmTeretana.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIzaberiActionPerformed

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed
        tblTeretane.setEnabled(true);
        try {
            Grad g = (Grad) jcbPretraga.getSelectedItem();
            teretane = nadjiTeretane(g);
            if(teretane.size() > 0){
                popuniTabelu();
                JOptionPane.showMessageDialog(this, "Sistem je prona≈°ao teretane po zadatim vrednostima");
                tblTeretane.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da pronaƒëe teretane po zadatim vrednostima");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da pronaƒëe teretane po zadatim vrednostima");
            Logger.getLogger(FrmTeretana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPretragaActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzaberi;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbGrad;
    private javax.swing.JComboBox<String> jcbPretraga;
    private javax.swing.JTable tblTeretane;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    /**
     * Popunjava formu podacima
     */
    private void pokreniFormu() {
        List<Teretana> list = new ArrayList<>();
        
        jcbPretraga.setEnabled(false);
        btnPretraga.setEnabled(false);
        tblTeretane.setEnabled(false);
        btnIzaberi.setEnabled(false);
                
        txtNaziv.setEditable(false);
        jcbGrad.setEnabled(false);
        txtAdresa.setEditable(false);
                
        btnDodaj.setVisible(false);
        
        tblTeretane.setEnabled(false); 
        
        
        List<Grad> gradovi = new ArrayList<>();
        try {
            gradovi = vratiListuGradova();
            jcbGrad.setModel(new DefaultComboBoxModel(gradovi.toArray()));
            jcbPretraga.setModel(new DefaultComboBoxModel(gradovi.toArray()));
        } catch (Exception ex) {
            Logger.getLogger(FrmTeretana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        txtNaziv.setEditable(true);
        txtAdresa.setEditable(true);
        jcbGrad.setEnabled(true);

        btnDodaj.setVisible(true);

        jcbPretraga.setEnabled(false);
        btnPretraga.setEnabled(false);   
        
        tblTeretane.setModel(new TeretanaTableModel(list));
    }
    
    /**
     * Vraca listu svih gradova
     * 
     * @return lista svih gradova
     * @throws Exception 
     */
    private List<Grad> vratiListuGradova() throws Exception{
        return Controller.getInstance().vratiSveGradove();
    }
    
    /**
     * Vraca listu svih teretana
     * 
     * @return lista svih teretana
     * @throws Exception 
     */
    private List<Teretana> vratiListuTeretana() throws Exception {
        return Controller.getInstance().vratiSveTeretane();
    }

    /**
     * Popunjva tableu teretana
     * 
     * @throws Exception 
     */
    private void popuniTabelu() throws Exception {
        tblTeretane.setModel(new TeretanaTableModel(teretane));
    }

    /**
     * Vraca listu teretana u datom gradu
     * 
     * @param g grad
     * @return lista teretana u datom gradu
     * @throws Exception 
     */
    private List<Teretana> nadjiTeretane(Grad g) throws Exception {
        return Controller.getInstance().nadjiTeretane(g);
    }

    /**
     * Vraca teretanu izabranu iz tabele
     * 
     * @return teretana izabranu iz tabele
     * @throws Exception 
     */
    private Teretana vratiIzabranuTeretanu() throws Exception {        
        if(tblTeretane.getSelectedRow() != -1)
            return teretane.get(tblTeretane.getSelectedRow());
        
        return null;
    }

    /**
     * Azurira tabelu teretana
     * 
     * @throws Exception 
     */
    private void azurirajTabelu() throws Exception {
        tblTeretane.setModel(new TeretanaTableModel(vratiListuTeretana()));
    }

    /**
     * Vraca teretanu zapamcenu u bazi podataka
     * 
     * @return teretana zapamcena u bazi podataka
     * @throws Exception 
     */
    private Teretana vratiZapamcenuTeretanu() throws Exception {
        Grad grad = (Grad) jcbGrad.getSelectedItem();
        Teretana t = new Teretana();
        t.setGrad(grad);
        
        if(txtNaziv.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite naziv teretane");
            return null;
        }
        if(txtAdresa.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesite adresu teretane");
            return null;
        }
        
        t.setNaziv(txtNaziv.getText());
        t.setAdresa(txtAdresa.getText());
        t.setGrad(grad);
        
        if(teretanaPostoji(t))
            return null;
        return t;
    }

    /**
     * Proverava da li teretana vec postoji
     * 
     * @param t teretana
     * @return da li teretana vec postoji
     * @throws Exception 
     */
    private boolean teretanaPostoji(Teretana t) throws Exception {
        List<Teretana> teretane = nadjiTeretane(t.getGrad());
        for (int i = 0; i < teretane.size(); i++)
            if(t.getAdresa().equals(teretane.get(i).getAdresa()) && t.getGrad().getId() == teretane.get(i).getGrad().getId()){
                JOptionPane.showMessageDialog(this, "Teretana na ovoj adresi veƒá postoji. \nUnesite drugu adresu");
                return true;
            }
        return false;
    }

    /**
     * Pamti teretanu u bazi podataka
     * 
     * @param t teretana
     * @throws Exception 
     */
    private void zapamtiTeretanu(Teretana t) throws Exception {
        Controller.getInstance().zapamtiTeretanu(t);
    }

    /**
     * Unosi podatke o teretani u formu
     * 
     * @param t teretana
     * @throws Exception 
     */
    private void ucitajTeretanu(Teretana t) throws Exception {
        t = Controller.getInstance().ucitajTeretanu(t);
        
        if(t != null){
            txtNaziv.setText(t.getNaziv());
            txtAdresa.setText(t.getAdresa());
            jcbGrad.setSelectedItem(t.getGrad());
            JOptionPane.showMessageDialog(this, "Sistem je uƒçitao teretanu");
        }else{
            //JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da uƒçita teretanu");
        }
    }
    
}
